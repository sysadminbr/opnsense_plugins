{% if helpers.exists('OPNsense.proxy.forward.transparentMode') and OPNsense.proxy.forward.transparentMode == '1' %}
{%   if helpers.exists('OPNsense.proxy.forward.sslbump') and OPNsense.proxy.forward.sslbump == '1' %}
# detects and allow ip addresses, so we can bump sni accordingly.
acl raw_ip dstdom_regex -i [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}
http_access allow raw_ip
{%   endif %}
{% endif %}

{% set ldap = [] %}
{% set local = [] %}
{% if helpers.exists('OPNsense.proxy.forward.authentication.method') and  OPNsense.proxy.forward.authentication.method != '' %}
{%      for method in OPNsense.proxy.forward.authentication.method.split(",") %}
{%          if method == "Local Database" %}
{%              if local.append("1") %}
{%              endif %}
{%          else %}
{%              for server in helpers.toList('system.authserver') %}
{%                  if server.type == 'ldap' and server.name == method %}
{%                      if ldap.append(server) %}
{%                      endif %}
{%                  endif %}
{%              endfor %}
{%          endif %}
{%      endfor %}
{% endif %}



{# external_acl_type dnscat %DST /usr/local/libexec/squid/nxbridge.py #}
external_acl_type dnscat %DST /usr/local/libexec/squid/nxbridge


{% if helpers.exists('OPNsense.ProxyUserACL.general.ACLs.ACL') %}
{%      for ACL in helpers.toList('OPNsense.ProxyUserACL.general.ACLs.ACL') %}
{%          if ACL.SourceType == "address" %}
{%              if ":" in ACL.SourceAddress %}
acl address_{{ ACL.Priority }} arp "/usr/local/etc/squid/ACL_address_{{ ACL.Priority }}.txt"
{%              else %}
acl address_{{ ACL.Priority }} src "/usr/local/etc/squid/ACL_address_{{ ACL.Priority }}.txt"
{%              endif %}
{%          elif ACL.SourceType == "group" %}
{%              if ldap|length == 1 %}
{%                  if helpers.exists('OPNsense.ProxySSO.EnableSSO') and OPNsense.ProxySSO.EnableSSO == '1' %}
external_acl_type ext_group_ldap_{{ ACL.Priority}} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_kerberos_ldap_group_acl -a -t {{ ACL.Hex }} -D {{ system.domain|upper }}
acl group_ldap_{{ACL.Priority}} external ext_group_ldap_{{ ACL.Priority }}
{%                  else %}
{%                      for authcn in ldap[0].ldap_authcn.split(";") %}
{%                          if ldap[0].ldap_attr_user == 'cn' %}
external_acl_type ext_ldap_{{ ACL.Priority }}_{{ loop.index }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_ldap_group_acl -R -b "{{ldap[0].ldap_basedn}}" -f "(&(cn=%a)(memberUid=%u))" -D "{{ldap[0].ldap_binddn}}" -w "{{ldap[0].ldap_bindpw}}" -p "{{ldap[0].ldap_port}}" "{{ldap[0].host}}"
{%                          else %}
external_acl_type ext_ldap_{{ ACL.Priority }}_{{ loop.index }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_ldap_group_acl -R -b "{{ldap[0].ldap_basedn}}" -f "(&({{ldap[0].ldap_attr_user}}=%u)(memberOf=cn=%a,{{authcn}}))" -D "{{ldap[0].ldap_binddn}}" -w "{{ldap[0].ldap_bindpw}}" -p "{{ldap[0].ldap_port}}" "{{ldap[0].host}}"
{%                          endif %}
acl group_ldap_{{ACL.Priority}}_{{ loop.index }} external ext_ldap_{{ ACL.Priority }}_{{ loop.index }} "/usr/local/etc/squid/ACL_useracl_{{ ACL.Priority }}.txt"
{%                      endfor %}
{%                  endif %}
{%              endif %}
{%              if local|length == 1 %}
external_acl_type ext_group_local_{{ ACL.Priority }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_unix_group_acl -p
acl group_local_{{ACL.Priority}} external ext_group_local_{{ ACL.Priority }} "/usr/local/etc/squid/ACL_useracl_{{ ACL.Priority }}.txt"
{%              endif %}
{%          else %}
acl user_{{ACL.Priority}} proxy_auth "/usr/local/etc/squid/ACL_useracl_{{ ACL.Priority }}.txt"
{%          endif %}
{%	    if ACL.Categories|length > 0 %}
acl categories_{{ACL.Priority}} external dnscat "/usr/local/etc/squid/ACL_categories_{{ ACL.Priority }}.txt"
{%	    endif %}
{%              if ACL.Domains|length > 0 %}
{%                  for element in ACL.Domains.split(",") %}
{%                      if '^' in element or '\\' in element or '$' in element or '[' in element %}
acl domains_{{ACL.Priority}} url_regex {{element|encode_idna}}
{%                      else %}
acl domains_{{ACL.Priority}} url_regex {{element|encode_idna|replace(".","\.")}}
{%                      endif %}
{%                  endfor %}
{%              endif %}
{%      endfor %}
{% endif %}


{# Generate http_access/deny when using authentication #}
{% if helpers.exists('OPNsense.ProxyUserACL.general.ACLs.ACL') and (ldap|length == 1 or local|length == 1) %}
{%      for priority in range(0,helpers.toList('OPNsense.ProxyUserACL.general.ACLs.ACL')|length) %}
{%              for ACL in helpers.toList('OPNsense.ProxyUserACL.general.ACLs.ACL') %}
{%              if ACL.Priority == priority|string %}
{%                  if ACL.SourceType == "address" %}
{%                      if helpers.exists('OPNsense.proxy.forward.icap.enable') and OPNsense.proxy.forward.icap.enable == '1' %}
adaptation_access response_mod {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
adaptation_access request_mod  {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                      endif %}
{%                      if ACL.Domains|length > 0 %}
http_access {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                      endif %}
{%                      if ACL.Categories|length > 0 %}
http_access {{ACL.Action}} address_{{ACL.Priority}} categories_{{ACL.Priority}}
{%                      endif %}
{%                  elif ACL.SourceType == "group" %}
{%                      if ldap|length == 1 %}
{%                              if helpers.exists('OPNsense.proxy.forward.icap.enable') and OPNsense.proxy.forward.icap.enable == '1' %}
adaptation_access response_mod {{ACL.Action}} group_ldap_{{ACL.Priority}} domains_{{ACL.Priority}}
adaptation_access request_mod  {{ACL.Action}} group_ldap_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                                      endif %}
{%                          if helpers.exists('OPNsense.ProxySSO.EnableSSO') and OPNsense.ProxySSO.EnableSSO == '1' %}
{%                      if ACL.Domains|length > 0 %}
http_access {{ACL.Action}} group_ldap_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                      endif %}
{%                              if ACL.Categories|length > 0 %}
http_access {{ACL.Action}} group_ldap_{{ACL.Priority}} categories_{{ACL.Priority}}
{%                              endif %}
{%                          else %}
{%                              for authcn in ldap[0].ldap_authcn.split(";") %}
http_access {{ACL.Action}} group_ldap_{{ACL.Priority}}_{{ loop.index }} domains_{{ACL.Priority}}
{%                                          endfor %}
{%                                      endif %}
{%                                  endif %}
{%                      if local|length == 1 %}
{%                                      if helpers.exists('OPNsense.proxy.forward.icap.enable') and OPNsense.proxy.forward.icap.enable == '1' %}
adaptation_access response_mod {{ACL.Action}} group_local_{{ACL.Priority}} domains_{{ACL.Priority}}
adaptation_access request_mod  {{ACL.Action}} group_local_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                                      endif %}
http_access {{ACL.Action}} group_local_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                                  endif %}
{%                  else %}
{%                      if helpers.exists('OPNsense.proxy.forward.icap.enable') and OPNsense.proxy.forward.icap.enable == '1' %}
adaptation_access response_mod {{ACL.Action}} user_{{ACL.Priority}} domains_{{ACL.Priority}}
adaptation_access request_mod  {{ACL.Action}} user_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                              endif %}
{%                      if ACL.Domains|length > 0 %}
http_access {{ACL.Action}} user_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                      endif %}
{%                              if ACL.Categories|length > 0 %}
http_access {{ACL.Action}} user_{{ACL.Priority}} categories_{{ACL.Priority}}
{%                              endif %}
{%                          endif %}
{%                  break %}
{%                      endif %}
{%              endfor %}
{%          endfor %}
{% else %}
{# Generate allow/deny when not using authentication #}
{%      for priority in range(0,helpers.toList('OPNsense.ProxyUserACL.general.ACLs.ACL')|length) %}
{%          for ACL in helpers.toList('OPNsense.ProxyUserACL.general.ACLs.ACL') %}
{%              if ACL.Priority == priority|string %}
{%                  if ACL.SourceType == "address" %}
{%                      if helpers.exists('OPNsense.proxy.forward.icap.enable') and OPNsense.proxy.forward.icap.enable == '1' %}
adaptation_access response_mod {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
adaptation_access request_mod  {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                   endif %}
{%                      if ACL.Domains|length > 0 %}
http_access {{ACL.Action}} address_{{ACL.Priority}} domains_{{ACL.Priority}}
{%                      endif %}
{%	                if ACL.Categories|length > 0 %}
http_access {{ACL.Action}} address_{{ACL.Priority}} categories_{{ACL.Priority}}
{%	                endif %}
{%	            endif %}
{%              endif %}
{%          endfor %}
{%      endfor %}
{% endif %}
